{
  "version": "0.1.0",
  "name": "FSharp.Control.ImperativeAsync",
  "description": "provided imperative async computation expression",
  "buildOptions": {
    "debugType": "portable",
    "compilerName": "fsc",
    "compile": {
      "includeFiles": [
        "./ImperativeAsync.fsi",
        "./ImperativeAsync.fs"
      ]
    }
  },
  "packOptions": {
    "requireLicenseAcceptance": false,
    "tags": [
      "F#",
      "async"
    ],
    "licenseUrl": "https://raw.githubusercontent.com/pocketberserker/FSharp.Control.ImperativeAsync/master/LICENSE",
    "projectUrl": "https://github.com/pocketberserker/FSharp.Control.ImperativeAsync",
    "repository": {
      "type": "git",
      "url": "https://github.com/pocketberserker/FSharp.Control.ImperativeAsync"
    }
  },
  "tools": {
    "dotnet-mergenupkg": "1.0.*",
    "dotnet-compile-fsc": {
      "version": "1.0.0-preview2-*",
      "imports": [
        "dnxcore50",
        "portable-net45+win81",
        "netstandard1.3"
      ]
    }
  },
  "frameworks": {
    "net40": {
      "dependencies": {
        "FSharp.Core": "4.0.0.1"
      }
    },
    "net45": {
      "dependencies": {
        "FSharp.Core": "4.0.0.1"
      }
    },
    ".NETPortable,Version=v4.5,Profile=Profile259": {
      "frameworkAssemblies": {
        "mscorlib": "",
        "System": "",
        "System.Core": ""
      },
      "dependencies": {
        "FSharp.Core": "4.0.0.1"
      }
    },
    "netstandard1.6": {
      "dependencies": {
        "NETStandard.Library": "1.6.0",
        "FSharp.Core": "4.0.1.7-alpha"
      }
    }
  }
}